# ==========================================
# YATA 環境変数テンプレート (.env.example)
# ==========================================
# 使い方:
#   1. このファイルをプロジェクトルート直下の .env にコピーします。
#      例: cp .env.example .env
#   2. 下記のプレースホルダーを Supabase ダッシュボードや運用環境の値に置き換えます。
#   3. 値を変更したらアプリを再起動し、EnvValidator の検証ログにエラーが無いか確認してください。
#
# コメントに記載されている "推奨値" は、特に理由が無ければそのまま利用できます。
# 必須項目が設定されていない場合、アプリの初期化に失敗します。

# --- Supabase 基本設定（必須） -----------------------------------------
# Supabase プロジェクトの URL。 https://<ref>.supabase.co 形式です。
SUPABASE_URL=https://your-project-ref.supabase.co

# Supabase の匿名キー (anon public key)。Supabase ダッシュボードで確認できます。
SUPABASE_ANON_KEY=eyJ_REPLACE_WITH_YOUR_SUPABASE_ANON_KEY

# --- OAuth コールバック URL（プラットフォーム別） -----------------------
# Web 開発時に使用するリダイレクト URL。通常はローカルホストのポート 8080。
SUPABASE_OAUTH_CALLBACK_URL_DEV=http://localhost:8080

# Web 本番用のリダイレクト URL。https で公開ドメインを指定します。
SUPABASE_OAUTH_CALLBACK_URL_PROD=https://yourdomain.com/auth/callback

# Android / iOS 用のカスタム URL スキーム。アプリの package 名と一致させてください。
SUPABASE_OAUTH_CALLBACK_URL_MOBILE=com.example.yata://login

# Windows / macOS / Linux デスクトップアプリ用のループバック URL。
SUPABASE_OAUTH_CALLBACK_URL_DESKTOP=http://localhost:8739/auth/callback

# Supabase Auth のバックエンド側で利用するコールバック URL を個別に指定したい場合に使用。
# SUPABASE_AUTH_CALLBACK_URL=https://your-backend.example.com/auth/callback

# --- アプリ挙動 / デバッグ設定 ------------------------------------------
# true で強制デバッグモード、false でリリースモード。未設定時はビルドモードに従います。
DEBUG_MODE=true

# 注文管理のパフォーマンストレーシング（デバッグ用）を有効にする場合は true。
ORDER_MANAGEMENT_PERF_TRACING=false

# --- ログ設定 ---------------------------------------------------------
# ログの詳細度。trace / debug / info / warn / error / fatal のいずれか。
LOG_LEVEL=info

# ログを保存したいディレクトリ。未設定の場合はアプリ既定のディレクトリを使用します。
LOG_DIR=./_logs

# ログフラッシュ間隔（ミリ秒）。既定値は 3000。
LOG_FLUSH_INTERVAL_MS=3000

# ログキューの最大件数（既定 5000）。
LOG_MAX_QUEUE=5000

# 個々のログファイルの最大サイズ（MB 単位、既定 5）。
LOG_MAX_FILE_SIZE_MB=5

# ログ全体で確保できる最大ディスク容量（MB 単位、既定 50）。
LOG_MAX_DISK_MB=50

# ログの保持日数（既定 10 日）。
LOG_RETENTION_DAYS=10

# ログキューが満杯になったときの挙動。drop-oldest / drop-newest / block から選択。
LOG_BACKPRESSURE=drop-oldest

# --- ログ致命的エラー時の高度なチューニング（必要な場合のみ有効化） -----
# 下記は特定の障害対応や調査が必要な時にだけコメントを外して設定してください。
# LOG_FATAL_FLUSH_BEFORE_HANDLERS=true
# LOG_FATAL_FLUSH_TIMEOUT_MS=5000
# LOG_FATAL_HANDLER_TIMEOUT_MS=3000
# LOG_FATAL_AUTO_SHUTDOWN=true
# LOG_FATAL_EXIT_PROCESS=false
# LOG_FATAL_EXIT_CODE=1
# LOG_FATAL_SHUTDOWN_DELAY_MS=1000

# --- 追加メモ ---------------------------------------------------------
# - 変数を空欄にする場合はキーごと削除せず、コメントアウトするのが安全です。
# - 値に空白や特殊文字が含まれるときは " で囲んでください。
# - .env を更新した後は flutter run / flutter build を再実行して値を反映させてください。
